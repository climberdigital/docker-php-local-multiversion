networks:
  default:
    name: apps

services:
  nginx:
    image: nginx:1.29.0-alpine
    ports:
      - '80:80'
    command: nginx -g 'daemon off;'
    volumes:
      # load nginx config
      - ./local/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ./local/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./local/nginx/config/php.conf:/etc/nginx/php.conf
      - ./local/nginx/certs:/etc/nginx/certs # use this binding if you want to set up self-signed SSL certificates
      # mount your nginx project virtual hosts
      - ./local/nginx/sites-enabled:/etc/nginx/sites-enabled
      # mount your project directories to connect them with nginx
      - ../projects/:/home/dev/apps/
      # mount your system's local timezone settings (for WSL2, Linux distros)
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - php_8_4
      - php_8_3
      # - php_8_2
      # - php_8_1

  # mailhog:
  #   image: mailhog/mailhog
  #   container_name: mailhog
  #   logging:
  #     driver: 'none'
  #   ports:
  #     - '1025:1025'
  #     - '8025:8025'

  mailpit:
    image: axllent/mailpit:v1.27
    restart: unless-stopped
    container_name: mailpit
    volumes:
      - ./volumes/mailpit/data:/data
    ports:
      - '8025:8025'
      - '1025:1025'

  redis:
    image: redis:7.4.4-alpine3.21
    command: redis-server
    container_name: redis
    volumes:
      - ./volumes/redis:/var/lib/redis
      - ./volumes/redis-config:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379

  mysql_8:
    image: mysql:8.4.5
    restart: unless-stopped
    tty: true
    container_name: mysql8
    ports:
      - '33080:3306'
    volumes:
      # mount your MySQL 8 data directory
      - ./volumes/mysql-8-data:/var/lib/mysql
    environment:
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_8

  mysql_5:
    image: mysql:5.7.44
    restart: unless-stopped
    tty: true
    container_name: mysql5
    ports:
      - '33057:3306'
    volumes:
      # mount your MySQL 5.7 data directory
      - ./volumes/mysql-5-data:/var/lib/mysql
    environment:
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql_5

  php_8_4:
    build:
      context: ./local/php/php-8.4
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: php83
    volumes:
      # mount your PHP 8.3 projects
      - ../projects/my-php-83-app:/home/dev/apps/my-php-83-app # replace this with your project's path
      # - ../projects/my-other-php-83-app:/home/dev/apps/my-other-php-83-app
      - /etc/localtime:/etc/localtime:ro

  php_8_3:
    build:
      context: ./local/php/php-8.3
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: php83
    volumes:
      # mount your PHP 8.3 projects
      - ../projects/my-php-83-app:/home/dev/apps/my-php-83-app # replace this with your project's path
      # - ../projects/my-other-php-83-app:/home/dev/apps/my-other-php-83-app
      - /etc/localtime:/etc/localtime:ro

  # php_8_2:
  #   build:
  #     context: ./local/php/php-8.2
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   container_name: php82
  #   volumes:
  #     - ../projects/my-php-82-app:/home/dev/apps/my-php-82-app # replace this with your project's path
  #     - /etc/localtime:/etc/localtime:ro

  # php_8_1:
  #   build:
  #     context: ./local/php/php-8.1
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   container_name: php81
  #   volumes:
  #     - ../projects/my-php-81-app:/home/dev/apps/my-php-81-app # replace this with your project's path
  #     - /etc/localtime:/etc/localtime:ro
